<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   width="1024" height="768" xmlns:com="com.*" initialize="windowedapplication2_initializeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.SlideBackEvent;
			import com.greensock.TweenLite;
			import com.greensock.easing.Circ;
			import com.orc.service.DataCollection;
			import com.orc.service.ServiceRegistry;
			import com.orc.utils.FormatUtils;
			import com.orc.utils.TimeRelatedId;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;

			public static const serviceRegistry:ServiceRegistry = new ServiceRegistry();
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				TweenLite.to(p_files, 0.5, {x:-315, y:-262, ease:Circ.easeInOut});
				TweenLite.to(p_proc, 0.5, {x:333, y:-262, ease:Circ.easeInOut});
				TweenLite.to(p_webclic, 0.5, {x:-1315, ease:Circ.easeInOut});

				TweenLite.to(p_notes, 0.5, {x:-333, ease:Circ.easeInOut});
				TweenLite.to(p_config, 0.5, {x:-333, y:-262, ease:Circ.easeInOut});
				TweenLite.to(p_task, 0.5, {x:-333, y:-262, ease:Circ.easeInOut});
				
				TweenLite.to(notes_g, 0.5, {x:0, y:0, alpha:1});
			}
			


			protected function windowedapplication2_initializeHandler(event:FlexEvent):void
			{
				notes_g.addEventListener(SlideBackEvent.BACK, listes);
			}


			protected function listes(event:Event):void
			{
				if (event is SlideBackEvent) {

					TweenLite.to(p_files, 0.5, {x:10, y:10, ease:Circ.easeInOut});
					TweenLite.to(p_proc, 0.5, {x:333, y:10, ease:Circ.easeInOut});
					TweenLite.to(p_webclic, 0.5, {x:755, y:10, ease:Circ.easeInOut});
					
					TweenLite.to(p_notes, 0.5, {x:10, y:340, ease:Circ.easeInOut});
					TweenLite.to(p_config, 0.5, {x:403, y:340, ease:Circ.easeInOut});
					TweenLite.to(p_task, 0.5, {x:755, y:340, ease:Circ.easeInOut});
					
					TweenLite.to(notes_g, 0.5, {x:0, y:-768, alpha:0, ease:Circ.easeOut});
					//TweenLite.to(notes_g, 2, {visible:false, alpha:0});
				}
			}

		]]>
	</fx:Script>
		<fx:Style>
			@namespace s "library://ns.adobe.com/flex/spark";
			@namespace mx "library://ns.adobe.com/flex/mx";
			>RichTextEditor { cornerRadius: 10; }
		</fx:Style>
	<fx:Declarations>
	</fx:Declarations>
	
	
	<s:Panel id="p_files" x="10" y="10"  width="315" height="314" title="最近文件">
		<s:List x="10" y="10" width="292" height="262" labelField="title" dataProvider="{new ArrayCollection(serviceRegistry.notesService.getNotesList())}"></s:List>
	</s:Panel>
	
	
	<s:Panel id="p_proc" x="333" y="10"  width="410" height="314" title="工作进度">
		<s:Button x="367" y="-25" width="35" label="按钮" click="button1_clickHandler(event)"/>
	</s:Panel>
	<s:Panel id="p_webclic" x="755" y="10" width="259" height="313" title="Web剪辑">
	</s:Panel>
	<s:Panel id="p_notes" x="10" y="344" width="384" height="406" title="文档记事">
	</s:Panel>
	<s:Panel id="p_config" x="403" y="340" width="341" height="410">
	</s:Panel>
	<s:Panel id="p_task" x="755" y="340" width="259" height="410" title="定期任务">
	</s:Panel>
		
	
	
	<com:notesvg id="notes_g" alpha="0" y="-768">
	</com:notesvg>	
	
	<!--
	<s:VGroup id="vg_notes" width="100%" height="100%">
		<s:HGroup width="100%" height="25">
			<mx:LinkButton label="New" click="newNotes(event)">
				
			</mx:LinkButton>
		</s:HGroup>
		
		<mx:VDividedBox  width="100%" height="750">
			<mx:DataGrid id="grid_notes" width="100%" height="240" doubleClickEnabled="true" doubleClick="grid_notes_open(event)"
						dataProvider="{new ArrayCollection(serviceRegistry.notesService.getNotesList())}">
				<mx:columns>
					<mx:DataGridColumn headerText="">
						<mx:itemRenderer>
							 <fx:Component>
								<mx:LinkButton icon="@Embed('buttons/remove_item.gif')" click="linkbutton2_clickHandler(event)">

									<fx:Script>
										<![CDATA[
											import mx.collections.ArrayCollection;
											protected function linkbutton2_clickHandler(event:MouseEvent):void
											{
												if (outerDocument.grid_notes.selectedItem!=null) {
													outerDocument.serviceRegistry.notesService.removeNotes(outerDocument.grid_notes.selectedItem["id"]);
													outerDocument.grid_notes.dataProvider = new ArrayCollection(outerDocument.serviceRegistry.notesService.getNotesList());
												}
											}
										]]>
									</fx:Script>

								</mx:LinkButton>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					
					<mx:DataGridColumn headerText="标题" dataField="title" >
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="修改时间" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:Label text="{FormatUtils.formatDate(data.modified)}"  fontSize="12">
									<fx:Script>
										<![CDATA[
											import com.orc.utils.FormatUtils;
										]]>
									</fx:Script>
								</mx:Label>

							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					
					<mx:DataGridColumn headerText="创建时间" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:Label text="{FormatUtils.formatDate(data.created)}"  fontSize="12">
									<fx:Script>
										<![CDATA[
											import com.orc.utils.FormatUtils;
										]]>
									</fx:Script>
								</mx:Label>

							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="大小" dataField="size" />
					<mx:DataGridColumn headerText="大小" dataField="id" />
				</mx:columns>
			</mx:DataGrid>
			<s:VGroup width="100%" height="100%">
				<s:Group width="100%" height="30">
					<s:Button x="679" y="4" width="61" label="Save" click="saveNotes(event)" uid=""/>
					
					<s:Label x="6" y="9" text="标题"/>
					<s:TextInput id="note_title" x="38" y="5" width="633"/>
				</s:Group>
				<mx:RichTextEditor width="100%" id="note_content" height="459">
							
				</mx:RichTextEditor>		
				
			</s:VGroup>
		</mx:VDividedBox>
	</s:VGroup>
		
	-->
</s:WindowedApplication>

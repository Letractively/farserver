<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" >
	<fx:Script>
		<![CDATA[
			import com.fx.ConfigUtils;
			import com.fx.FileService;
			import com.fx.GridFile;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.listClasses.TileListItemRenderer;
			import mx.core.UITextField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			var xmm:XML = 
				<vssmenu label="all" data="root">
				 <menuitem label="VSS权限查询" data="top">
				  <menuitem label="按目录查询" data="findauthoritybycontent"/>
				  <menuitem label="按人员查询" data="findauthoritybyperson"/>
				 </menuitem>
				 <menuitem label="VSS授权管理" data="manage">
				 </menuitem>
				 <menuitem label="VSS授权记录" data="top">
				  <menuitem label="按目录查询" data="findrecordbycontent"/>
				  <menuitem label="按人员查询" data="findrecordbyperson"/>
				 </menuitem>
				 
				 <menuitem label="编译打包" data="top">
				  <menuitem label="编译权限管理" data="packagegive"/>
				  <menuitem label="编译记录查询" data="findresult"/>
				 </menuitem>
				</vssmenu>
			

			protected function myTree_clickHandler(event:MouseEvent):void
			{
				var target:Object = event.target;
				if (target is UITextField) {
					var text:UITextField = target as UITextField;
					
					if (text.text=="每日文件") {
						viewstack.selectedChild = navcontent_everyday_file;
					}
					
				}
			}
			
			
			var fileService:FileService = new FileService();
			
			protected function textinput1_clickHandler(event:MouseEvent):void {

				var f:File = File.desktopDirectory;
				f.browseForDirectory("选择目录");
				
				f.addEventListener(Event.SELECT, function (event:Event):void {
					var dir:File = event.target as File;
					fileService.organizeFolder(dir);
					ConfigUtils.writeProp("basePath",dir.nativePath);
					fileService.init(new File(cfg_basePath.text));	
				});
			}
			

			protected function button1_clickHandler(event:MouseEvent):void
			{
				if (list_days.verticalScrollPosition>0) {
					list_days.verticalScrollPosition --;
				}
			}


			protected function button2_clickHandler(event:MouseEvent):void
			{
				list_days.verticalScrollPosition ++;
			}


			protected function list_days_clickHandler(event:MouseEvent):void
			{
				var target:Object = event.target;
				if (target is UITextField) {
					var ir:TileListItemRenderer = target.parent as TileListItemRenderer;
					
					var arraylist:ArrayList = fileService.getDateFileList(ir.data["path"]);
					
					datagrid_file_list_view.dataProvider = arraylist;
				}
			}



			protected function navcontent_everyday_file_initializeHandler(event:FlexEvent):void
			{
				var basePath:String = ConfigUtils.readProp("basePath");
				
				if (basePath!=null) {
					fileService.init(new File(basePath));	
					//cfg_basePath.text = basePath;
					//var days:ArrayCollection = new ArrayCollection(fileService.getDays());
					//list_days.dataProvider =days;
					//list_days.verticalScrollPosition = days.length;
				}
			}


			protected function button3_clickHandler(event:MouseEvent):void
			{
				fileService.organizeFolder(new File(cfg_basePath.text));
				fileService.init(new File(cfg_basePath.text));	
			}


			protected function datagrid_file_list_view_doubleClickHandler(event:MouseEvent):void
			{
				var target:Object = event.target;
				var i:int = datagrid_file_list_view.selectedIndex;
				var item:GridFile = datagrid_file_list_view.dataProvider.getItemAt(i) as GridFile;
				
				item.file.openWithDefaultApplication();
			}


			protected function list_days_initializeHandler(event:FlexEvent):void
			{
				list_days.dataProvider = new ArrayCollection(fileService.getDays());
				list_days.verticalScrollPosition = fileService.getDays().length-1;
				
				//dataProvider="{new ArrayCollection(fileService.getDays())}"
			}

		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<fx:XML id="data_ltree" xmlns="http://www.g-qu.net/powspace/" >
			<node label="便笺">
				<node label="便笺">
					<node label="列表"></node>
					<node label="分类"></node>
				</node>
				<node label="时间">
					<node label="待办"></node>
					<node label="提醒"></node>
					<node label="动态"></node>
				</node>
				<node label="文件">
					<node label="每日文件"></node>
					<node label="常用文件"></node>
					<node label="分类管理"></node>
				</node>
			</node>
			
		</fx:XML>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<mx:MenuBar x="0" y="0" height="30" width="100%" dataProvider="{xmm}"   labelField="@label"  showRoot="false" iconField="">
	</mx:MenuBar>
	<s:HGroup x="0" y="30" width="100%" height="100%">
		
		
		<mx:HDividedBox width="100%" height="100%" color="0x323232">
			<mx:Tree id="myTree" width="200" height="100%" labelField="@label"
					 showRoot="false" dataProvider="{data_ltree}"  click="myTree_clickHandler(event)"/>
				
				
				<mx:ViewStack id="viewstack" borderStyle="solid" width="100%" height="100%" color="0x323232">
					<s:NavigatorContent id="search" label="Search" backgroundColor="0xDCDCDC" width="100%" height="100%" fontWeight="bold">
						
						<s:Label text="helloa">
							
						</s:Label>
					</s:NavigatorContent>
					
					<!--文件管理 VBOX-->
					<s:NavigatorContent id="navcontent_everyday_file" backgroundColor="0xDCDCDC" width="100%" height="100%" initialize="navcontent_everyday_file_initializeHandler(event)">
						<mx:VBox width="100%" height="100%">
						<!--日期导航-->
						<s:HGroup verticalAlign="middle">
							<s:Button width="34" label="&lt;" click="button1_clickHandler(event)"/>
							<mx:HorizontalList   id="list_days" 
								width="707" height="25"
								click="list_days_clickHandler(event)" horizontalScrollPolicy="off"
								initialize="list_days_initializeHandler(event)"
								dataProvider="{fileService.getDays()}">
							</mx:HorizontalList>
							<s:Button width="43" label="&gt;" click="button2_clickHandler(event)"/>
						</s:HGroup>
							
						<!--文件列表-->
						<mx:DataGrid id="datagrid_file_list_view" width="100%" height="100%" 
									 doubleClickEnabled="true" 
									 doubleClick="datagrid_file_list_view_doubleClickHandler(event)">
							<mx:columns>
								<mx:DataGridColumn headerText="" width="64">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Image source="{data.iconpath}" width="64" height="64">
											</mx:Image>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn >
								<mx:DataGridColumn headerText="名称" dataField="name"/>	
								<mx:DataGridColumn headerText="修改时间" dataField="modified"/>
								<mx:DataGridColumn dataField="size" sortable="true" resizable="true"/>
							</mx:columns>
						</mx:DataGrid>		
						
						<!--目录设置-->
						<s:HGroup verticalAlign="middle">
							<s:Label>工作根目录</s:Label><s:TextInput text="{fileService.getRootFolder()}" x="35" y="10" width="428" id="cfg_basePath"/> 
							<s:Button label="设置" click="textinput1_clickHandler(event)"/>
							<s:Button label="组织" click="button3_clickHandler(event)"/>
							
							<!--<s:Button label="按日期组织文件"  click="button1_clickHandler(event)"/>-->
							<s:Label color="red" id="label_filestatus" text="工作目录的文件会自动按日期组织起来"></s:Label>
						</s:HGroup>
						</mx:VBox>
					</s:NavigatorContent>
					
				</mx:ViewStack>
				
			
		</mx:HDividedBox>
		
	</s:HGroup>
	
	
	
	
</s:WindowedApplication>

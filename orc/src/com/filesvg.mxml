<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1024" height="768">
	<fx:Script>
		<![CDATA[
			import com.orc.service.ServiceRegistry;
			
			import mx.collections.ArrayList;
			import mx.controls.ColorPicker;
			import mx.core.UIComponent;
			import mx.core.UITextField;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.FlexEvent;
			
			import spark.effects.interpolation.RGBInterpolator;
			
			protected function linkbutton3_clickHandler(event:MouseEvent):void
			{
				var sbe : SlideBackEvent = new SlideBackEvent();
				sbe.obj = this;
				this.dispatchEvent(sbe);
			}

			private var serviceRegistry:ServiceRegistry = new ServiceRegistry();
			
			
			private var lastDate:String = "";
			
			private function onMouseMove(e:MouseEvent):void {
				
				if(e.target.className == "UITextField"){
					if(lastDate != e.target.text){
						e.target.toolTip = datechooser.displayedMonth + "-" + e.target.text;
					}
					lastDate = e.target.text;
				}
			}
			
			private function events():void {
				var summaryies:Object = serviceRegistry.fileService.getMonthSummaries(datechooser.displayedYear, datechooser.displayedMonth);
				
				for(var i:Number=0; i<datechooser.numChildren; i++) {
					var calendarObj:Object = datechooser.getChildAt(i);
					
					if (calendarObj.hasOwnProperty("className"))
					{
						if (calendarObj.className == "CalendarLayout")
						{
							var uic:UIComponent = calendarObj as UIComponent;
							for(var j:Number=0; j<uic.numChildren; j++) {
								var children:DisplayObject = uic.getChildAt(j);
								if (children.hasOwnProperty("text")) {
									var day:UITextField = UITextField(children);
									day.selectable = true;
									day.wordWrap = true;
									day.multiline = true;
									//day.htmlText="very good";
									try {
										var n:Number =  new Number(day.text);
										if (n>0 && n<32) {
											day.backgroundColor = 0xff00ff;
											if (summaryies[n+"日"]!=null) {
												day.htmlText= n + "<br>(" + summaryies[n+"日"] + ")";
												//day["numday"] = n;
											} else {
											}
										}
									} catch (e:Error) {
									}
									
								}
								
							}
						}
					}
					
				}
			}

			protected function datechooser_clickHandler(event:MouseEvent):void
			{
				var target:Object = event.target;
				if (target is UITextField) {
					var uit:UITextField = target as UITextField;
					
					if (uit.text.indexOf("\r")>-1) {
						var dayStr:String = uit.text.substr(0, uit.text.indexOf("\r"));
						var folderPath:String = serviceRegistry.fileService.getRootFolder() + "/" + datechooser.displayedYear + "年/" 
							+ datechooser.displayedMonth + "月/" + dayStr + "日";
						datagrid_file_list_view.dataProvider = serviceRegistry.fileService.getDateFileList(folderPath);
					}
					
				}
			}
			
			protected function datechooser_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				events();
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Group width="100%" height="25">
		<mx:LinkButton x="936" y="3" label="Back" click="linkbutton3_clickHandler(event)"/>
	</s:Group>
	
	<s:HGroup width="100%" height="740" y="25">
		<s:VGroup width="260" height="554">
			<mx:Tree width="221">
			</mx:Tree>
			<mx:DateChooser id="datechooser" width="256" height="341" mouseMove="onMouseMove(event)" click="datechooser_clickHandler(event)"
							creationComplete="events()" updateComplete="events()"  />
			<s:Label id="txtlb">
				
			</s:Label>
		</s:VGroup>
		<s:VGroup height="100%">
			<mx:DataGrid id="datagrid_file_list_view" width="758" height="100%"
						 doubleClickEnabled="true" allowMultipleSelection="true">
				<mx:columns>
					<mx:DataGridColumn headerText="" width="64">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Image source="{data.iconpath}" width="64" height="64">
								</mx:Image>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn >
					<mx:DataGridColumn headerText="名称" dataField="name"/>	
					<mx:DataGridColumn headerText="修改时间" dataField="modified"/>
					<mx:DataGridColumn dataField="size" sortable="true" resizable="true"/>
				</mx:columns>
			</mx:DataGrid>	
			
		</s:VGroup>
	</s:HGroup>
</s:Group>

<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1010" height="700" >
	<fx:Script>
		<![CDATA[
			import com.orc.service.ServiceRegistry;
			import com.orc.service.file.FileEvent;
			import com.orc.service.file.FileItemDisplayGroup;
			import com.orc.service.file.GridFile;
			import com.orc.utils.FormatUtils;
			
			import mx.collections.ArrayList;
			import mx.collections.HierarchicalData;
			import mx.containers.Panel;
			import mx.controls.ColorPicker;
			import mx.core.UIComponent;
			import mx.core.UITextField;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			
			import spark.components.BorderContainer;
			import spark.components.Label;
			import spark.effects.interpolation.RGBInterpolator;
			import spark.primitives.Rect;
			import spark.primitives.supportClasses.FilledElement;
			
			public function init():void {
				ServiceRegistry.fileService.addEventDispatcher(this);
				this.addEventListener(FileEvent.MODIFY, onChange);
				fillByDate();
			}
			
			protected function linkbutton3_clickHandler(event:MouseEvent):void
			{
				var sbe:SlideBackEvent = new SlideBackEvent();
				sbe.obj = this;
				this.dispatchEvent(sbe);
			}
			
			var summaryies:Object;
		
			protected function tree1_clickHandler(event:MouseEvent):void
			{
				var target:Object = event.target;
				if (target is UITextField) {
					var text:UITextField = target as UITextField;
					//datagrid_file_list_view.dataProvider = serviceRegistry.fileService.getByTypeCategory(typeTree.selectedItem["type"]);
				}
			}
			
			public function fillByDate():void {
				
				vg_file_bydate.removeAllElements();
				
				var t1:Date = new Date();
				ServiceRegistry.fileService.load();
				var t2:Date = new Date();
				trace( t2.getTime()-t1.getTime());
				
				var grouped:Array = ServiceRegistry.fileService.getAllFilesGrouped();
				
				var t3:Date = new Date();
				trace( t3.getTime()-t2.getTime());
				
				for (var i:int = 0; i < grouped.length; i++) 
				{
					/*
					var panel:Panel = new Panel();
					panel.percentWidth = 100;
					panel.title = grouped[i].label;
					panel.verticalScrollPolicy = "off";
					panel.horizontalScrollPolicy = "off";
					*/
					
					
					var vg:VGroup = new VGroup();
					vg.id = FormatUtils.formatDateToId(grouped[i].date);
					vg_file_bydate.addElement(vg);
					vg.gap = 0;
					vg.percentWidth=95;
					//vg.height = 80;
					//vg.y = i * 80;
					
					
					var gTitle:BorderContainer = new BorderContainer();
					gTitle.percentWidth=100;
					gTitle.height = 25;
					gTitle.setStyle("backgroundColor","#E0E0E0");
					gTitle.setStyle("borderColor","#cedbef");
					var titleLabel:Label = new Label();
					titleLabel.x = 20;
					titleLabel.y = 5;
					titleLabel.text = grouped[i].label;
					gTitle.addElement(titleLabel);
					vg.addElement(gTitle);
					
					
					var childFiles:Array = grouped[i].children as Array;
					
					for (var j:int = 0; j < childFiles.length; j++) 
					{
						var fid : FileItemDisplayGroup = new FileItemDisplayGroup();
						fid.gridfile = childFiles[j] as GridFile;
						//fid.y = j * 48;
						vg.addElement(fid);
						
					}
					//panel.addElement(vg);
				}
				
				var t4:Date = new Date();
				trace( t4.getTime()-t3.getTime());
			}
			
			protected function onChange(event:Event):void
			{
				var fe:FileEvent = event as FileEvent;
				var date:Date = new Date();
								
				fillByDate();
			}
			
			protected function vg_file_bydate_mouseWheelHandler(event:MouseEvent):void
			{
				if (vg_file_bydate.y >0) return;
				if (vg_file_bydate.y < -vg_file_bydate.height) return;
				vg_file_bydate.y +=event.delta * 5;
			}
			
			
			protected function groupMouseMove(event:MouseEvent):void
			{
				trace("moved");				
			}
			
			protected function gridMouseDown(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		Scroller {
			downArrowUpSkin: Embed(source="/assets/downArrow.png");
			downArrowOverSkin: Embed(source="/assets/downArrow.png");
			downArrowDownSkin: Embed(source="/assets/downArrow.png");
			upArrowUpSkin: Embed(source="/assets/upArrow.png");
			upArrowOverSkin: Embed(source="/assets/upArrow.png");
			upArrowDownSkin: Embed(source="/assets/upArrow.png");
			thumbDownSkin: 
				Embed(source="/assets/thumb.png",
				scaleGridLeft="7", scaleGridTop="5", 
				scaleGridRight="8", scaleGridBottom="7");
			
			thumbUpSkin: 
				Embed(source="/assets/thumb.png",
				scaleGridLeft="7", scaleGridTop="5", 
				scaleGridRight="8", scaleGridBottom="7");
			
			thumbOverSkin: 
				Embed(source="/assets/thumb.png",
				scaleGridLeft="7", scaleGridTop="5", 
				scaleGridRight="8", scaleGridBottom="7");
			
			trackSkin: 
				Embed(source="/assets/scrolltrack.png",
				scaleGridLeft="7", scaleGridTop="4", 
				scaleGridRight="8", scaleGridBottom="6" );   
		}
	</fx:Style>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:HGroup x="0" y="0" width="1010" height="100%">
		
		<s:Scroller verticalScrollPolicy="auto" horizontalScrollPolicy="off" height="100%">
			<s:VGroup id="vg_file_bydate" mouseWheel="vg_file_bydate_mouseWheelHandler(event)" height="100%" width="1000" gap="0">
			</s:VGroup>
		</s:Scroller>
		
		
			<!--
			<mx:AdvancedDataGrid id="datagrid_file_list_view" width="617" height="100%" verticalGridLines="false" 
								 disclosureClosedIcon="{null}"
								 disclosureOpenIcon="{null}"
								  doubleClickEnabled="true" allowMultipleSelection="true"
								  dataProvider="{new HierarchicalData(serviceRegistry.fileService.getAllFilesGrouped())}"
								  displayItemsExpanded="true">
				<mx:columns>
					<mx:AdvancedDataGridColumn  headerText="" width="36">
						<mx:itemRenderer>
							<fx:Component>
								<mx:Image source="{data.iconpath}" width="32" height="32">
								</mx:Image>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn >
					<mx:AdvancedDataGridColumn headerText="名称" width="500" dataField="name" resizable="true"/>	
					<mx:AdvancedDataGridColumn headerText="修改时间" width="80" dataField="modified"/>
					<mx:AdvancedDataGridColumn dataField="size" sortable="true" width="80" />
					
					<mx:AdvancedDataGridColumn>
						<mx:itemRenderer>
							<fx:Component>
								<mx:LinkButton icon="@Embed('buttons/remove_item.gif')" click="linkbutton2_clickHandler(event)">
									<fx:Script>
										<![CDATA[
											import mx.collections.ArrayCollection;
											protected function linkbutton2_clickHandler(event:MouseEvent):void
											{
												if (outerDocument.datagrid_file_list_view.selectedItem!=null) {
													(outerDocument.datagrid_file_list_view.selectedItem["file"] as File).moveToTrash();
													outerDocument.datagrid_file_list_view.dataProvider = new HierarchicalData(outerDocument.serviceRegistry.fileService.getAllFilesGrouped());
												}
											}
										]]>
									</fx:Script>
								</mx:LinkButton>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
				</mx:columns>	
			</mx:AdvancedDataGrid>
			-->
		
	</s:HGroup>
</s:Group>

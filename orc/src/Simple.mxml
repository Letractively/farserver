<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:com="com.*"
					   width="1024" height="768" backgroundColor="#EAE4E4"
					   showStatusBar="false" xmlns:easypaste="com.orc.service.easypaste.*" initialize="windowedapplication1_initializeHandler(event)" xmlns:timetrack="com.orc.service.timetrack.*">
	
	<fx:Script>
		<![CDATA[
			import com.orc.service.ServiceRegistry;
			
			import mx.controls.HTML;
			import mx.controls.RichTextEditor;
			import mx.core.UITextField;
			import mx.events.FlexEvent;
			
			import spark.components.Application;
			
			
			//public var serviceRegistry:ServiceRegistry = new ServiceRegistry();
			
			private var onScreen:Group = null;
			
			private function switchGroup(v:Group):void {
				
				if (onScreen!=null) {
					slideOut(onScreen);
				}
				slideIn(v);
				onScreen = v;
			}
			
			protected function click_return(event:MouseEvent) : void {
				//showDashboard();
				slideOut(slidedIn);
			}
			
			
			var slidedIn:Group = null;
			protected function slideIn(g:Group) : void {
				slidedIn = g;
				var w:Number = right_group.width;
				g.x = w;
				g.y = 0;
				g.visible = true;
				g.x = 0;
				//TweenLite.to(g, 0.5, {x:0});
			}
			
			protected function slideOut(g:Group) : void {
				slidedIn = null;
				var w:Number = right_group.width;
				g.x = w + 20;
				g.y = controlbar.height;
				g.visible = true;
				//TweenLite.to(g, 0.5, {x:w, y:controlbar.height, visible:false});
			}
			
			
			var full_x:int = 0;
			var full_y:int = 0;
			
			var float_x:int = 20;
			var float_y:int = 20;
			
			
			protected function switchFullModel(event:MouseEvent):void
			{
				
				float_x = nativeApplication.activeWindow.x;
				float_y = nativeApplication.activeWindow.y;
				NativeApplication.nativeApplication.activeWindow.alwaysInFront = false;
				nativeApplication.activeWindow.x = full_x;
				nativeApplication.activeWindow.y = full_y;
				
				NativeApplication.nativeApplication.activeWindow.width = 1024;
				NativeApplication.nativeApplication.activeWindow.height = 768;
				fullmodel.visible = true;
				dragModel.visible = false;		
			}
			
			protected function switchModel2(event:MouseEvent):void
			{
				
				full_x = nativeApplication.activeWindow.x;
				full_y = nativeApplication.activeWindow.y;
				
				nativeApplication.activeWindow.x = float_x;
				nativeApplication.activeWindow.y = float_y;
				
				NativeApplication.nativeApplication.activeWindow.alwaysInFront = true;
				NativeApplication.nativeApplication.activeWindow.width = 154;
				NativeApplication.nativeApplication.activeWindow.height = 40;
				
				var runningItem:Object = ServiceRegistry.trackingService.getRunningItem();
				if (runningItem==null) {
					busy_img.visible = false;
					busy_time.text = "0:00";
					busy_label.text= "当前没有事项在进行";
				} else {
					busy_img.visible = true;
					busy_time.text = ServiceRegistry.trackingService.getDura(runningItem);
					busy_label.text= runningItem["desc"];
					
					var timer:Timer = new Timer(60*1000);
					timer.addEventListener(TimerEvent.TIMER,function onTimer() {
						busy_time.text = ServiceRegistry.trackingService.getDura(runningItem);
					});
					timer.start();
					
				}
				
				fullmodel.visible = false;
				dragModel.visible = true;				
			}
			
			//.....................................
			//以下是悬浮框的操作
			//.....................................
			private function dragWin():void{//窗口拖动
				if(NativeApplication.nativeApplication.activeWindow.displayState == NativeWindowDisplayState.NORMAL){
					NativeApplication.nativeApplication.activeWindow.startMove();
				}
			}
			
			protected function onDragDrop(event:NativeDragEvent):void
			{
				var s:String;
				var cb:Clipboard = event.clipboard;
				
				var formats:Array = cb.formats;
				
				var ignoreText:Boolean = false;
				
				//文本 
					if (formats.indexOf("air:text")>-1) {
					var txtString:String = cb.getData("air:text") as String;
					var o:Object = ServiceRegistry.notesService.createNotes("文本剪辑" + new Date(), txtString);
					notes_g.pushItem(o, txtString);
					return;
				}
				//文件
				if (formats.indexOf("air:file list")>-1) {
					var data:Array = cb.getData("air:file list") as Array;
					for (var j:int = 0; j < data.length; j++) 
					{
						var file:File = data[j] as File;
						try {
							ServiceRegistry.fileService.addFile(file);
						} catch (e:Error) {
							
						}
						
					}
					return;
				}
			}
			
			
			protected function onAcceptDrag(event:NativeDragEvent):void
			{
				NativeDragManager.acceptDragDrop(dragModel);
			}
			
			protected function windowedapplication1_initializeHandler(event:FlexEvent):void
			{
				ServiceRegistry.fileService.load();
				files_g.init();
				notes_g.drawList();
				timetrack_g.load(new Date());
				onScreen = files_g;
			}
			
			protected function openFiles(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				switchGroup(files_g);	
			}
			
			protected function openTimes(event:MouseEvent):void
			{
				switchGroup(timetrack_g);				
			}
			
			protected function openPastes(event:MouseEvent):void
			{
				switchGroup(notes_g);				
			}
			
			protected function openConfig(event:MouseEvent):void
			{
				switchGroup(config_g);
				
			}
			
			protected function closeApp(event:MouseEvent):void
			{
				nativeApplication.exit();		
			}
			
			protected function minApp(event:MouseEvent):void
			{
				nativeApplication.activeWindow.minimize();				
			}
			
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace com "com.*";
		@namespace easypaste "com.orc.service.easypaste.*";
		@namespace timetrack "com.orc.service.timetrack.*";
		
	</fx:Style>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer id="fullmodel" width="100%" height="100%" horizontalCenter="true" backgroundColor="#EAE4E4">
		<s:BorderContainer id="controlbar" x="-1" y="0" width="1025" height="71"
						   backgroundColor="#4B4A4A"
						   contentBackgroundAlpha="1.0" contentBackgroundColor="#EAE4E4"
						  
						   mouseDown="dragWin()">
			<mx:LinkButton x="10" y="0" width="72" height="69" label="文件" click="openFiles(event)"
						   color="#FCF7F7" icon="@Embed('icon/Folder.png')"
						   labelPlacement="bottom"/>
			<mx:LinkButton x="87" y="0" width="72" height="69" label="时间"  color="#FCF7F7" labelPlacement="bottom" icon="@Embed('icon/Clock.png')" click="openTimes(event)"/>
			<mx:LinkButton x="256" y="0" width="72" height="69" label="配置" color="#FCF7F7" labelPlacement="bottom" icon="@Embed('icon/Tools.png')" click="openConfig(event)"/>
			<!-- <mx:LinkButton x="341" y="1" width="72" height="69" label="悬浮窗口" color="#FCF7F7" labelPlacement="bottom" icon="@Embed('icon/Wallet.png')" click="switchModel2(event)"/> -->
			<mx:LinkButton x="169" y="0" width="72" height="69" label="随意贴" color="#FCF7F7" labelPlacement="bottom" icon="@Embed('icon/Clipboard.png')" click="openPastes(event)"/>
			
			<mx:LinkButton x="903" y="0" width="69" label="悬浮模式" click="switchModel2(event)"
						   color="#FCF7F7" fontSize="11" icon="@Embed('buttons/profile.png')"
						   paddingLeft="0" paddingRight="0"/>
			<mx:LinkButton x="975" y="0" width="21" icon="@Embed('buttons/minus.png')" click="minApp(event)"/>
			<mx:LinkButton x="998" y="0" width="21" icon="@Embed('buttons/window-close.png')" click="closeApp(event)"/>
		</s:BorderContainer>
		
		<s:HGroup x="0" y="70" width="100%" height="696">
		<s:Group id="right_group" width="100%" >
			<com:filesvg id="files_g" visible="true" x="0" y="0" width="1024" height="694">
			</com:filesvg>
			
			<easypaste:EasyPaste id="notes_g"  x="0" y="0" width="1016" visible="false">
				
			</easypaste:EasyPaste>
			
			<com:tasksvg id="task_g" x="0" y="0" width="1016" visible="false">
			</com:tasksvg>
			
			<timetrack:TimeTrack id="timetrack_g" x="0" y="0" width="1016" visible="false">
				
			</timetrack:TimeTrack>
			
			<com:ConfigSVG id="config_g" x="0" y="0" width="1016" visible="false">
				
			</com:ConfigSVG>
		</s:Group>
	</s:HGroup>
	</s:BorderContainer>
	
	<s:BorderContainer width="154" height="40" id="dragModel" visible="false"  x="0" y="0" mouseDown="dragWin()" nativeDragOver="onAcceptDrag(event)" nativeDragDrop="onDragDrop(event)">
		<mx:LinkButton x="124" y="2" width="27"  fontSize="11"
					   icon="@Embed('buttons/profile.png')" paddingLeft="0" paddingRight="0" click="switchFullModel(event)"/>
		<s:Label x="8" y="23" width="144" fontSize="10" text="标签" id="busy_label"/>
		<s:Label x="7" y="7" width="71" fontSize="16" fontWeight="bold" text="0:00" id="busy_time"/>
		<s:Image id="busy_img" x="48" y="5" width="16" height="16" source="buttons/busy.png"/>
		
	</s:BorderContainer>
	
	<s:Group id="dragModelxx" width="100%" height="36" visible="false"  x="0" y="0" >
		<mx:LinkButton labelPlacement="bottom" icon="@Embed('buttons/dragpo.png')" id="dropButton" width="100%" paddingLeft="0" paddingRight="0" height="36" x="0" y="0" 
					   doubleClickEnabled="true" doubleClick="switchFullModel(event)" mouseDown="dragWin()"
				  nativeDragOver="onAcceptDrag(event)" nativeDragDrop="onDragDrop(event)"> 
		</mx:LinkButton>
	</s:Group>
		
</s:WindowedApplication>
